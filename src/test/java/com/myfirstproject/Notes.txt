
There are 8 selenium locator to locate an element:
id
name
className
tagName
linkText
partialLinkText
xpath -> there are multiple ways to write xpath
css -> there are multiple ways to write xpath

* What is the difference between linkText and partialLinkText?
        *
        * Similarities : both accept the full text of a name of link
        * They both should be used only links
        *
        * Differences: linkText looks for EXACT text
        * partialLinkText looks for PART OF A text
        *
        * Note: When using partialLinkText, BE CAREFUL!!!!
        * if there is other partial matches, it returns the first partial link
        * Best practice is use linkText
        * If you use partialLinkText, use enough words
        *
        * When is partialLinkText is use full?
        * - if link text is too long
        * - if there is a space before or after the text

        * isDisplayed is used to verify isf an element is displayed on the page
                 * It return true if element is exists, return false if elements does not exist


there are 2 type of xpath, abselut and relative:
Absolute xpath ==> // body/div/header/div/div/div
Relative xpath ==> //dice[@id='logo']; or //div[@class='flex-col logo];

In some websites ids can be changeable for security purposes, it can change evey time when you refresh/load the page
we need to use other keys

==> we can select from a DROPDOWN with 3 different ways:
1. Select and print option 1 using index using selectByIndex();
2. Select and print option 2 by value using selectByValue();
3. Select and print default  value by visible text using selectByVisibleText();

DDT ==> Data Driven Testing ==> when you get data from external source like excel
When you CHANGE the DATA, the TEST CASE also CHANGES. We control the test case by just controlling the test data
Workbook => Worksheet => Row => Cell ==> get the data from excel

Import the apache poi dependency in your pom file
Create resources directory under java folder(right click on java and create the folder)
Add the excel file on the resources folder
Create a new package: excelautomation
Create a new class : ReadExcel
Create a new test method : readExcel()
Store the path of the  file in a string
Open the file
Open the workbook using fileinputstream
Open the first worksheet
Go to first row
Go to first cell on that first row and print
Go to second cell on that first row and print
Go to 2nd row first cell  and assert if the data equal to USA
Go to 3rd row 2nd cell-chain the row and cell
Find the number of row
Find the number of used row
Print country, capitol key value pairs as map object

********** How do you capture screenshot in your automation framework?/How do you get screenshot in selenium?
     * I use getScreenshots method to capture teh screenshot.
     * Actually we have a reusable methods to capture the screenshot

